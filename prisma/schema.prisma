// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String?
  username  String?
  role      String   @default("user")
  enabled   Boolean  @default(true)
  address   String?
  orders    Order[]
  carts     Cart[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product {
  id          Int               @id @default(autoincrement())
  title       String
  description String
  authorId    Int?
  price       Float
  sold        Int               @default(0)
  quantity    Int
  orderItems  ProductOnOerder[]
  cartItems   ProductOnCart[]
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  category    Category?         @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId  Int?
}

model Order {
  id            Int               @id @default(autoincrement())
  products      ProductOnOerder[]
  cartTotal     Float
  oderStatus    String            @default("Not Processed")
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt
  orderByUser   User?             @relation(fields: [orderByUserId], references: [id])
  orderByUserId Int?
}

model ProductOnOerder {
  id        Int     @id @default(autoincrement())
  product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
  order     Order   @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId   Int
  count     Int
  price     Float
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String
  products  Product[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Cart {
  id            Int             @id @default(autoincrement())
  products      ProductOnCart[]
  cartStatus    String          @default("Not Processed")
  cartTotal     Float           @default(0)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  orderByUser   User            @relation(fields: [orderByUserId], references: [id])
  orderByUserId Int
}

model ProductOnCart {
  id        Int     @id @default(autoincrement())
  cart      Cart    @relation(fields: [cartId], references: [id], onDelete: Cascade)
  cartId    Int
  croduct   Product @relation(fields: [productId], references: [id])
  productId Int
  count     Int
  price     Float
}
